name: Binary Build and Publish

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      dry_run:
        required: true
        type: boolean

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build binaries
        run: |
          BUILD_TIME=`date +%FT%T%z`
          GIT_REV=`git rev-parse --short HEAD`
          GO_VERSION=$(go version)
          LDFLAGS=-ldflags "-w -s \
          -X 'github.com/wayjam/tv-mixproxy/internal.Version=${{ inputs.version }}' \
          -X 'github.com/wayjam/tv-mixproxy/internal.GitRev=${GIT_REV}' \
          -X 'github.com/wayjam/tv-mixproxy/internal.BuildTime=${BUILD_TIME}' \
          -X 'github.com/wayjam/tv-mixproxy/internal.GoVersion=${GO_VERSION}' \
          "
          GOOS=linux GOARCH=amd64 go build "${LDFLAGS}" -o build/tv-mixproxy-linux-amd64 ./cmd/tv-mixproxy
          GOOS=linux GOARCH=arm64 go build "${LDFLAGS}" -o build/tv-mixproxy-linux-arm64 ./cmd/tv-mixproxy

      - name: Get Release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
        continue-on-error: true

      - name: Upload Release Assets
        if: steps.get_release.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./build/tv-mixproxy-linux-amd64
          asset_name: tv-mixproxy-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (ARM64)
        if: steps.get_release.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./build/tv-mixproxy-linux-arm64
          asset_name: tv-mixproxy-linux-arm64
          asset_content_type: application/octet-stream
